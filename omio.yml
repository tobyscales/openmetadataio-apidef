openapi: '3.1.0'
jsonSchemaDialect: 'https://json-schema.org/draft/2019-09/schema'
info:
  title: OpenMetadataIO
  description: "OpenMetadataIO is a REST-based API enabling permissioned access to\
    \ versioned metadata in a heterogeneous media supply chain. \nThe purpose of OMIO\
    \ is to create a common source of truth for metadata across production, pre-production\
    \ and post-production workflows; \ntoday those workflows consist of disconnected\
    \ ISV solutions reading and writing metadata to their own proprietary datastores,\
    \ often\nrequiring elaborate export/import and validation procedures to ensure\
    \ integrity of metadata from one step to the next.\n\nOpenMetadataIO seeks to\
    \ solve this problem by offering a unified API for accessing metadata across all\
    \ of these applications.\n\nBelow is the draft specification for the OpenMetadataIO\
    \ API."
  version: 1.0.0
servers: 
  - url: |
security: []
tags:
- name: Asset Management
  description: CRUD operations for Assets, as defined by the OMC schema. Can be extended with custom properties.
- name: Participant Management
  description: CRUD operations for Participants, as defined by the OMC schema. Can be extended with custom properties.
- name: Role Management
  description: CRUD operations for Roles, which can be assigned to Participants and used to grant or deny access to metadata within OMIO.
- name: Schema Extensions
  description: Extend the core [OMC schema](https://json-schema.org/specification) by specifying additional required fields for Assets, Participants and Roles.


paths:
  /assets:
    post:
      operationId: CreateAsset
      tags:
      - Asset Management
      summary: Create new Asset
      description: |-
              operationId: Create new Asset
      requestBody: 
        description: This action creates a new Asset within OpenMetadataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                  $ref: '#/components/schemas/Asset'

      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  error:
                    type: string
                example:
                  created: false
                  error: "100- Already exists. // 200- Missing required paramters. // 300- Insufficient permissions."

  /assets/{refid}:
    summary: ReferenceID is a unique string value assigned to your Asset.
    
    get:
      operationId: GetAssetByRef
      summary: Get an Asset by referenceId
      parameters: 
        - in: path
          name: refid
          schema: 
            $ref: '#/components/schemas/identifier'
          required: true
          description: ReferenceID of the Asset you wish to retrieve.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Asset'

  /tasks:
    post:
      operationId: GetTasks
      tags:
      - Task Management
      summary: Create new Task
      description: |-
              operationId: Create new Task
      requestBody: 
        description: This action creates a new Task within OpenMetadataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                  $ref: '#/components/schemas/Task'

      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $schema: "omc-json-v2.0.json#/$defs/Utility/properties/identifier"


  /metadata/create:
    post:
      tags:
      - Metadata Definitions
      summary: Create new metadata schema from URL
      description: |-
        This action creates a new metadata schema. It takes a public URL and creates a schema based on the JSON objects defined there.

        + schema_url (string) - A publicly-accessible URL for a [JSON-schema](https://json-schema.org/specification) definition file.
      operationId: "CreateMetadataSchema"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  version:
                    type: string
                  updated:
                    type: string
                example:
                  name: omc-schema
                  version: "2.0"
                  updated: "true"

components: 
  schemas: 
    OMCAsset:
      $ref: 'omc-json-v2.0.json#/$defs/Asset/properties/Asset'
    Participant:
      $ref: 'omc-json-v2.0.json#/$defs/Participant'
    Task:
      $ref: 'omc-json-v2.0.json#/$defs/Task/properties/taskFC'
    identifier: 
      $ref: 'omc-json-v2.0.json#/$defs/Utility/properties/identifier'
    Asset:
      anyOf: 
        -  $ref: "#/components/schemas/OMCAsset"
